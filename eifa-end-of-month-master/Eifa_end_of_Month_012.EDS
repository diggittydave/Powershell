PROGRAM EIFA_END_OF_MONTH_001;

//************************************************************************************/
//SCRIPT: EIFA_END_OF_MONTH_001
//SYSTEM: EIFA
//DESC:          PERFORMS END OF MONTH POPULATION CONTROL DATA RESEND ON EACH BRANCH.
//LIMITS:
//SCRIPT_ID:
//AUTHOR       DATE          STATUS
//----------------------------------
//DAVIDWE      01/22/2019    INITIAL WRITE UP
//DAVIDWE      01/25/2019    ADDED IN LOGGING OF BRANCHES, FIXED ARRAY WALKING.+
//DAVIDWE      01/31/2019    MULTI-PAGE INPUT
//DAVIDWE      01/31/2019    REMOVED VARIABLES FOR PERIOD AND YEAR. WILL PUT BACK IN 
//                           TESTING. P = PERIOD, Y = YEAR LINES 65 AND 66
//DAVIDWE      01/31/2019    CHANGED LOOP
//************************************************************************************/

VAR
    //set variables
    LogFile : TTextFile;
    COMPANY,BRANCH, EIFA_U, BRANCH_U, M, P, PT, Y, T, TT, F, HOUR, LogMessage: STRING;
    X, R, I, YI, L, TI, PG: INTEGER; 
    DONE : BOOLEAN;
    BRNCHARRAY : Array[0..200] of STRING;

BEGIN
    //The assignfile will need to be modified for whatever machine this is put on.
    HOUR := (FormatDateTime('hh',Now()));
    AssignFile(LogFile, 'C:\Users\chq-davidwe\Desktop\MONTH_END_LOG_FILE_'+HOUR+'.txt.');    //CHANGE PATH FOR USER'S MACHINE
    Append(LogFile);
    WriteLn(LogFile, FormatDateTime('mm/dd/yy -- hh:mm:ss', Now()));
    close(LogFile);
    if FormName = 'MENU_SCREEN' then begin
        //select Population control page
        SetValue('SELECTION_NO','19');
        DoAction('ENTER');
        //get/set date and period
      		M := Copy(GetValue('DATE_S_VAL'),0,2);
        Y := Copy(GetValue('DATE_S_VAL'),7,4);
        ShowMessage(M);                        //Current MONTH -FOR TESTING PURPOSES, WILL BE COMMENTED OUT DURING RELEASE
        ShowMessage(Y);                       //current year   -FOR TESTING PURPOSES, WILL BE COMMENTED OUT DURING RELEASE
        I := StrToInt(M);
        YI := StrToInt(Y)
        CASE I OF
            1:BEGIN
                P:= '12';
                Y:= IntToStr(YI-1);
            END;
            2: P:= '01';
            3: P:= '02';
            4: P:= '03';
            5: P:= '04';
            6: P:= '05';
            7: P:= '06';
            8: P:= '07';
            9: P:= '08';
            10: P:= '09';
            11: P:= '10';
            12: P:= '11';
        END;
        ShowMessage('MM ='+P+'  YYYY='+Y);                       // FOR TESTING PURPOSES, WILL BE COMMENTED OUT DURING RELEASE
        //do initial search
        if FormName = 'REALTIMEAUDIT' then begin
            SetValue('COMPANY_S_VAL','EI');                     //COMPANY
            setValue('BRANCH_S_VAL','');                        //BRANCH
            setValue('YEAR_S_VAL','2017');                           //YEAR     ------SET TO 2017 FOR TESTING PURPOSES--- SET IT BACK TO 'Y' FOR LIVE DATA
            setValue('PERIOD_S_VAL','09');                         //PERIOD   ------SET TO 09 FOR TESTING PURPOSES--- SET IT BACK TO 'P' FOR LIVE DATA
            setValue('DATE_S_VAL','');                          //DATE
            setValue('SELECTION','');                           //PERIOD
            DoAction('ENTER');
            T := COPY (GETVALUE('DATE_L'),66,4);
            TT:= TRIM(T);
            ShowMessage(TT);                                                 // FOR TESTING PURPOSES, WILL BE COMMENTED OUT DURING RELEASE
            TI:= StrToInt(TT);
            if TI > 31 THEN PG := TI / 31;                                  //SETS NUMBER OF PAGES
            PT := IntToStr(PG);
            ShowMessage(PT);                                                // FOR TESTING PURPOSES, WILL BE COMMENTED OUT DURING RELEASE           
            //FIRST LOOP TO BUILD BRNCHARRAY (DUE TO FIELD NAMING CONVENTION)
            R := 0;
            DONE := false;
            while NOT DONE do begin            
                FOR X:=1 to 9 DO BEGIN
                    EIFA_U := 'EIFA_COUNT_0'+IntToStr(X);
                    BRANCH_U :='CFIT_COUNT_0'+IntToStr(X);
                    if GetValue(EIFA_U)='U' THEN BEGIN
                        BRNCHARRAY[R]:= GetValue(BRANCH_U); 
                        R:= R + 1;
                    END;
                END;
                //SECOND LOOP TO BUILD BRNCHARRAY (DUE TO FIELD NAMING CONVENTION)
                FOR X:=10 TO 31 DO BEGIN
                    EIFA_U := 'EIFA_COUNT_'+IntToStr(X);
                    BRANCH_U := 'CFIT_COUNT_'+IntToStr(X);
                    if GetValue(EIFA_U)='U' THEN BEGIN 
                        BRNCHARRAY[R]:= GetValue(BRANCH_U);
                        R:= R + 1;
                    END;
                END;
                DoAction('PF2')
                PG:= PG -1
                IF PG = -1 THEN DONE := TRUE;
            END; 
            L :=0
            FOR L:=0 TO 200 DO BEGIN
                //Change the "assignfile" based on the log file location.
                logMessage := BRNCHARRAY[L];
                AssignFile(LogFile, 'C:\Users\chq-davidwe\Desktop\MONTH_END_LOG_FILE_'+HOUR+'.txt.');        //CHANGE PATH FOR USER'S MACHINE
                Append(LogFile);
                Writeln(LogFile,logMessage);
                close(LogFile);
            END;
            ShowMessage(BRNCHARRAY[X]);                // FOR TESTING PURPOSES, WILL BE COMMENTED OUT DURING RELEASE
            X := 0;
            While Length(BRNCHARRAY[X]) > 0 DO BEGIN
                BRANCH_U := BRNCHARRAY[X];             //SETS BRANCH_U TO THE BRANCH CODE VALUE FOUND IN X POS OF THE ARRAY
                SetValue('COMPANY_S_VAL','EI');        //COMPANY
                setValue('BRANCH_S_VAL',BRANCH_U);     //BRANCH
                setValue('YEAR_S_VAL',Y);              //YEAR
                setValue('PERIOD_S_VAL',P);            //PERIOD
                setValue('DATE_S_VAL','');             //DATE
                setValue('SELECTION','');              //PERIOD
                DoAction('ENTER');                     //LOADS BRANCH DISCREPENCY DATA
                DoAction('PF4');                       //RESENDS DATE
                X := X + 1;
            END;
            DoAction('PF8')
        END;      
    END;
END.